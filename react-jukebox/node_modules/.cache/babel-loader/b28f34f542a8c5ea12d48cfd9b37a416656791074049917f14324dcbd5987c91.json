{"ast":null,"code":"var _jsxFileName = \"/Users/rickydanzberger/Code/jukebox/react-jukebox/src/components/Callback.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport qs from 'qs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Callback = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const client_id = 'e5bfb025a6744f459efaad327a7b9680';\n  const client_secret = 'c8c81fbe80434ab689815a8b6e1a3af7';\n  useEffect(() => {\n    const fetchAccessToken = async (code, state) => {\n      try {\n        const response = await axios.post('https://accounts.spotify.com/api/token', qs.stringify({\n          grant_type: 'authorization_code',\n          code: code,\n          redirect_uri: 'http://localhost:3000/callback'\n        }), {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded',\n            'Authorization': 'Basic ' + btoa(`${client_id}:${client_secret}`)\n          }\n        });\n        const {\n          access_token,\n          refresh_token\n        } = response.data;\n        localStorage.setItem('spotifyAccessToken', access_token);\n        localStorage.setItem('spotifyRefreshToken', refresh_token);\n        navigate('/selectdevice');\n      } catch (error) {\n        console.error('Error fetching access token:', error);\n      }\n    };\n    const params = new URLSearchParams(location.search);\n    const code = params.get('code');\n    const state = params.get('state');\n    if (code && state) {\n      fetchAccessToken(code, state);\n    } else {\n      console.error('Authorization code or state is missing');\n    }\n  }, [location, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n};\n_s(Callback, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Callback;\nexport default Callback;\nvar _c;\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"names":["React","useEffect","axios","useNavigate","useLocation","qs","jsxDEV","_jsxDEV","Callback","_s","navigate","location","client_id","client_secret","fetchAccessToken","code","state","response","post","stringify","grant_type","redirect_uri","headers","btoa","access_token","refresh_token","data","localStorage","setItem","error","console","params","URLSearchParams","search","get","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rickydanzberger/Code/jukebox/react-jukebox/src/components/Callback.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport qs from 'qs';\n\nconst Callback: React.FC = () => {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const client_id = 'e5bfb025a6744f459efaad327a7b9680';\n    const client_secret = 'c8c81fbe80434ab689815a8b6e1a3af7';\n\n    useEffect(() => {\n        const fetchAccessToken = async (code: string, state: string) => {\n            try {\n                const response = await axios.post('https://accounts.spotify.com/api/token', qs.stringify({\n                    grant_type: 'authorization_code',\n                    code: code,\n                    redirect_uri: 'http://localhost:3000/callback',\n                }), {\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                        'Authorization': 'Basic ' + btoa(`${client_id}:${client_secret}`),\n                    }\n                });\n\n                const { access_token, refresh_token } = response.data;\n                localStorage.setItem('spotifyAccessToken', access_token);\n                localStorage.setItem('spotifyRefreshToken', refresh_token);\n                navigate('/selectdevice');\n            } catch (error) {\n                console.error('Error fetching access token:', error);\n            }\n        };\n\n        const params = new URLSearchParams(location.search);\n        const code = params.get('code');\n        const state = params.get('state');\n\n        if (code && state) {\n            fetchAccessToken(code, state);\n        } else {\n            console.error('Authorization code or state is missing');\n        }\n    }, [location, navigate]);\n\n    return <div>Loading...</div>;\n};\n\nexport default Callback;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAOC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAMQ,SAAS,GAAG,kCAAkC;EACpD,MAAMC,aAAa,GAAG,kCAAkC;EAExDZ,SAAS,CAAC,MAAM;IACZ,MAAMa,gBAAgB,GAAG,MAAAA,CAAOC,IAAY,EAAEC,KAAa,KAAK;MAC5D,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,wCAAwC,EAAEb,EAAE,CAACc,SAAS,CAAC;UACrFC,UAAU,EAAE,oBAAoB;UAChCL,IAAI,EAAEA,IAAI;UACVM,YAAY,EAAE;QAClB,CAAC,CAAC,EAAE;UACAC,OAAO,EAAE;YACL,cAAc,EAAE,mCAAmC;YACnD,eAAe,EAAE,QAAQ,GAAGC,IAAI,CAAC,GAAGX,SAAS,IAAIC,aAAa,EAAE;UACpE;QACJ,CAAC,CAAC;QAEF,MAAM;UAAEW,YAAY;UAAEC;QAAc,CAAC,GAAGR,QAAQ,CAACS,IAAI;QACrDC,YAAY,CAACC,OAAO,CAAC,oBAAoB,EAAEJ,YAAY,CAAC;QACxDG,YAAY,CAACC,OAAO,CAAC,qBAAqB,EAAEH,aAAa,CAAC;QAC1Df,QAAQ,CAAC,eAAe,CAAC;MAC7B,CAAC,CAAC,OAAOmB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC;IAED,MAAME,MAAM,GAAG,IAAIC,eAAe,CAACrB,QAAQ,CAACsB,MAAM,CAAC;IACnD,MAAMlB,IAAI,GAAGgB,MAAM,CAACG,GAAG,CAAC,MAAM,CAAC;IAC/B,MAAMlB,KAAK,GAAGe,MAAM,CAACG,GAAG,CAAC,OAAO,CAAC;IAEjC,IAAInB,IAAI,IAAIC,KAAK,EAAE;MACfF,gBAAgB,CAACC,IAAI,EAAEC,KAAK,CAAC;IACjC,CAAC,MAAM;MACHc,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAC;IAC3D;EACJ,CAAC,EAAE,CAAClB,QAAQ,EAAED,QAAQ,CAAC,CAAC;EAExB,oBAAOH,OAAA;IAAA4B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAChC,CAAC;AAAC9B,EAAA,CAzCID,QAAkB;EAAA,QACHL,WAAW,EACXC,WAAW;AAAA;AAAAoC,EAAA,GAF1BhC,QAAkB;AA2CxB,eAAeA,QAAQ;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}