{"ast":null,"code":"var _jsxFileName = \"/Users/rickydanzberger/Code/jukebox/react-jukebox/src/pages/Search.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, List, ListItem, ListItemText, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  _s();\n  const [songQuery, setSongQuery] = useState('');\n  const [artistQuery, setArtistQuery] = useState('');\n  const [albumQuery, setAlbumQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const handleSearch = async () => {\n    setLoading(true);\n    try {\n      const token = localStorage.getItem('spotifyAccessToken');\n      const response = await axios.get('https://api.spotify.com/v1/search', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        params: {\n          q: `${songQuery ? `track:${songQuery}` : ''} ${artistQuery ? `artist:${artistQuery}` : ''} ${albumQuery ? `album:${albumQuery}` : ''}`.trim(),\n          type: 'track,artist,album'\n        }\n      });\n      setResults(response.data.tracks.items);\n    } catch (error) {\n      console.error('Error fetching search results:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Search for a Song, Artist, or Album\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Song\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: songQuery,\n      onChange: e => setSongQuery(e.target.value),\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Artist\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: artistQuery,\n      onChange: e => setArtistQuery(e.target.value),\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Album\",\n      variant: \"outlined\",\n      fullWidth: true,\n      value: albumQuery,\n      onChange: e => setAlbumQuery(e.target.value),\n      margin: \"normal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: handleSearch,\n      disabled: loading,\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(List, {\n      children: results.length > 0 ? results.map(result => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(ListItemText, {\n          primary: result.name,\n          secondary: result.artists.map(artist => artist.name).join(', ')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 33\n        }, this)\n      }, result.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: \"No results found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"9M7gRIqeGpV4uF/L69mdCimORj0=\");\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","axios","Container","TextField","Button","Typography","List","ListItem","ListItemText","CircularProgress","jsxDEV","_jsxDEV","Search","_s","songQuery","setSongQuery","artistQuery","setArtistQuery","albumQuery","setAlbumQuery","results","setResults","loading","setLoading","handleSearch","token","localStorage","getItem","response","get","headers","Authorization","params","q","trim","type","data","tracks","items","error","console","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","label","fullWidth","value","onChange","e","target","margin","color","onClick","disabled","length","map","result","primary","name","secondary","artists","artist","join","id","_c","$RefreshReg$"],"sources":["/Users/rickydanzberger/Code/jukebox/react-jukebox/src/pages/Search.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport { Container, TextField, Button, Typography, List, ListItem, ListItemText, CircularProgress } from '@mui/material';\n\nconst Search: React.FC = () => {\n    const [songQuery, setSongQuery] = useState('');\n    const [artistQuery, setArtistQuery] = useState('');\n    const [albumQuery, setAlbumQuery] = useState('');\n    const [results, setResults] = useState<any[]>([]);\n    const [loading, setLoading] = useState(false);\n\n    const handleSearch = async () => {\n        setLoading(true);\n        try {\n            const token = localStorage.getItem('spotifyAccessToken');\n            const response = await axios.get('https://api.spotify.com/v1/search', {\n                headers: { Authorization: `Bearer ${token}` },\n                params: {\n                    q: `${songQuery ? `track:${songQuery}` : ''} ${artistQuery ? `artist:${artistQuery}` : ''} ${albumQuery ? `album:${albumQuery}` : ''}`.trim(),\n                    type: 'track,artist,album',\n                },\n            });\n            setResults(response.data.tracks.items);\n        } catch (error) {\n            console.error('Error fetching search results:', error);\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    return (\n        <Container>\n            <Typography variant=\"h4\" gutterBottom>\n                Search for a Song, Artist, or Album\n            </Typography>\n            <TextField\n                label=\"Song\"\n                variant=\"outlined\"\n                fullWidth\n                value={songQuery}\n                onChange={(e) => setSongQuery(e.target.value)}\n                margin=\"normal\"\n            />\n            <TextField\n                label=\"Artist\"\n                variant=\"outlined\"\n                fullWidth\n                value={artistQuery}\n                onChange={(e) => setArtistQuery(e.target.value)}\n                margin=\"normal\"\n            />\n            <TextField\n                label=\"Album\"\n                variant=\"outlined\"\n                fullWidth\n                value={albumQuery}\n                onChange={(e) => setAlbumQuery(e.target.value)}\n                margin=\"normal\"\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSearch} disabled={loading}>\n                Search\n            </Button>\n            {loading ? (\n                <CircularProgress />\n            ) : (\n                <List>\n                    {results.length > 0 ? (\n                        results.map((result) => (\n                            <ListItem key={result.id}>\n                                <ListItemText primary={result.name} secondary={result.artists.map((artist: any) => artist.name).join(', ')} />\n                            </ListItem>\n                        ))\n                    ) : (\n                        <Typography variant=\"body1\">No results found</Typography>\n                    )}\n                </List>\n            )}\n        </Container>\n    );\n};\n\nexport default Search;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}